[transforms.loki_json]
  type = "remap"
  inputs = ["log_json"]
  source = '''
  .level = .log.level
  if starts_with(.message, "{") ?? false {
    # parse json messages
    json = object!(parse_json!(.message))
    del(.message)
    . |= json
  }
  '''

[sinks.loki]
  type = "loki"
  inputs = ["loki_json"]
  endpoint = "${QRYN_URL}"
  compression = "none"
  auth.strategy = "basic"
  auth.user = "${QRYN_USERNAME}"
  auth.password = "${QRYN_PASSWORD}"
  encoding.codec = "json"

  labels.event_provider = "{{event.provider}}"
  labels.fly_region = "{{fly.region}}"
  labels.fly_app_name = "{{fly.app.name}}"
  labels.fly_app_instance = "{{fly.app.instance}}"
  labels.host = "{{host}}"
  labels.level = "{{level}}"

[sources.flyio_metrics]
  type = "prometheus_scrape"
  endpoints = [ "https://api.fly.io/prometheus/personal/federate" ]
  auth.strategy = 'bearer'
  auth.token = "${ACCESS_TOKEN?}"
  query.match = ['{app=~".+"}']
  
[sinks.prom_write]
  type = "prometheus_remote_write"
  inputs = [ "flyio_metrics"]
  endpoint = "${QRYN_URL:-http://qryn:3100/prom/remote/write}"
  auth.username = "${QRYN_USERNAME}"
  auth.password = "${QRYN_PASSWORD}"
  healthcheck.enabled = false
